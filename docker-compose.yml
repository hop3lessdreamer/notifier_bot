version: "3"

services:
  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
      - "443:443"
    restart: always
    user: root
#    volumes:
#      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"

  db-p:
    image: postgres:17.2-alpine3.20
    restart: always
    shm_size: 256mb
    # network_mode: host
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres
    volumes:
      - pg_data:/data/postgres
      - ./db:/docker-entrypoint-initdb.d
      - .prod.env:/.prod.env

  rabbit:
    image: rabbitmq:4.0-management-alpine
    expose:
      - 5672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASS}
    ports:
      - "${RABBIT_PORT}:5672"
      - "${RABBIT_MONITOR_PORT}:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 5s
      retries: 3

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_PATH=/bot/
    volumes:
      - ".:/bot"
    # network_mode: host
    command:
      /bin/sh -c "echo \"Running alembic upgrade...\"
      && poetry run alembic upgrade head
      && echo \"Running main.py...\"
      && poetry run python -Xfrozen_modules=off main.py"
    depends_on:
      - rabbit
      - db-p
      - nginx
      - redis

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbit
    command:
      /bin/sh -c "poetry run taskiq scheduler infrastructure.scheduler:scheduler"
    volumes:
      - ".:/bot"
    restart: always

  redis:
    image: redis:7.4.1-alpine
    expose:
      - 6379
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  pg_data:
